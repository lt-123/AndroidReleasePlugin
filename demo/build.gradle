apply plugin: 'com.android.application'
apply plugin: 'xyz.liut.release'

android {
    compileSdkVersion 29

    defaultConfig {
        applicationId "xyz.liut.androidreleaseplugin"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
    }

    signingConfigs {
        appSign {
            keyAlias 'liut'
            keyPassword 'liut1123'
            storeFile file('./appSign.jks')
            storePassword 'liut1123'
        }
    }


    buildTypes {
        debug {
            signingConfig signingConfigs.appSign
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            signingConfig signingConfigs.appSign
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "default"

    productFlavors {
        official {
            dimension "default"
            buildConfigField 'String', 'HOST', '"https://www.official.com"'
        }

        internal {
            dimension "default"
            buildConfigField 'String', 'HOST', '"https://dev.internal.com"'
        }
    }


}

outputApk {
    /*
    输出文件名称模板, 如下

    $app: module 名称
    $b: buildType 名称
    $f: productFlavor 名称
    $vn: versionName
    $vc: versionCode
     */
    fileNameTemplate = '$app-$b-$f-$vn.$vc'
    jiaguFileNameTemplate = '$app-$b-$f-$vn'

    def isJenkins = System.getenv("IS_JENKINS")

    jiaguCmdParams = "-autosign -automulpkg tttt"

    println "------------$isJenkins-------------"

    // Jenkins 环境
    if (isJenkins == "true") {
        // 输出文件夹
        outputPath = '/Users/liut/workspace'

        // 加固输出文件夹
        jiaguOutputPath = '/Users/liut/workspace'

        // 完后后不打开文件夹
        openDir = false
    } else {
        // 输出文件夹
        outputPath = './output/'

        // 加固输出文件夹
        jiaguOutputPath = './output/'

        // 完后后打开文件夹
        openDir = true
    }


}

gradle.projectsEvaluated {
    println "=========projectsEvaluated========"

    releaseDebug.doFirst {
        println "是的伙计"
    }
    releaseDebug.doFirst {
        print "塔丁狗， "
    }
}

